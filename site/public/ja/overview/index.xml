<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overviews on Skycoin Blog</title>
    <link>https://www.skycoin.net/ja/overview/</link>
    <description>Recent content in Overviews on Skycoin Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.skycoin.net/ja/overview/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Obelisk: Skycoin 合意形成アルゴリズム | 情報ページ</title>
      <link>https://www.skycoin.net/ja/overview/obelisk-skycoin-consensus-algorithm-information-pages/</link>
      <pubDate>Sat, 09 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.skycoin.net/ja/overview/obelisk-skycoin-consensus-algorithm-information-pages/</guid>
      <description>合意形成の要点  合意形成の理由 高いスケーラビリティと低消費電力 集団攻撃に対する堅牢性 「51％攻撃」 非表示のIPアドレス クロック同期の独立性 2つのタイプのノード：合意形成とブロック生成  Skycoin合意形成アルゴリズムはどのように動くか 参考  合意形成の要点 合意形成の理由 Skycoin 合意形成アルゴリズム（&amp;rdquo;Obelisk&amp;rdquo;）は、すべてのネットワークノードでSkycoinブロックチェーンの状態を同期させます。 これにより、一貫した会計処理が行われます。 すなわち、所与の公開鍵（またはアドレス）のコインバランスを計算すると、計算を実行した各ノードで同じ値が得られます。
高いスケーラビリティと低消費電力 設計により、アルゴリズムはスケーラブルで計算コストがかからず、Proof-of-Workに代わるものです。 したがって、低価格でエネルギー消費の少ない予算のハードウェアで合意形成アルゴリズムとブロック生成の両方を実行できるため、暗号通貨ネットワークを集権化の可能性に対してより堅牢にします。（すなわち、一般市民に手頃な価格のノードにより利用可能）
集団攻撃に対する堅牢性 我々の合意形成アルゴリズムは、（i）収束が速く、（ii）最小のネットワークトラフィックを必要とし、（iii）組織化された悪意のあるネットワークによる大規模な集団攻撃に耐えることができます。 このアルゴリズムは反復性がなく、高速であり、最近接の接続性（例えばメッシュネットワーク上）のみを有するスパースネットワーク上で実行することができ、接続グラフ内のサイクルの存在下でうまく動作します。（すなわち、DAGタイプの接続性は必要ありません。）
「51％攻撃」 限られた意味においては、このアルゴリズムのベースバージョンはこの攻撃の対象となる可能性があります。 具体的には、改変された、または悪意のある多数を占めるノードがプロトコル準拠およびUTXO準拠の候補ブロックを送ると、このようなブロックで合意形成を獲得してしまいます。 しかし、ある種の違反のブロックが合意形成トライアルに参加する機会を得る前に、（未修正の）アルゴリズムによって、このブロックは削除されます。 合意形成ノードは、未知のノード（すなわち、信頼されていない公開鍵によって署名された）から来る合意形成関連のメッセージが無視されるような方法で、Web-of-Trust（信用の輪）概念を任意に利用することができます。
大多数の信用の輪メンバーが、無意識に悪意のあるノードを信頼できるノードのローカルリストに含める場合を除き、信用の輪モードを有効にすると、（a）ブロックチェーンフォークを引き起こしたり、（b）合意形成プロセスを中断させたりするために、非常に多数の悪意ある合意形成ノードを投入することはほとんど効果がありません。
非表示のIPアドレス ノードは、それらの暗号化公開鍵によってアドレス指定されます。 ノードのIPアドレスは、ノードが直接接続されているノードにのみ認識されます。
クロック同期の独立性 アルゴリズムは「ウォールクロック」（すなわちカレンダーの日付/時刻）を使用しません。 代わりに、検証された合意形成およびブロックチェーン関連のメッセージから抽出されたブロックシーケンス番号が、ノードの内部時間を計算するために使用されます。 これは非公式に「ブロッククロック」と呼ばれることがあります。
2つのタイプのノード：合意形成とブロック生成 合意形成ノードは、1つまたは複数のブロック生成ノードから入力を受け取ります。 合意形成とブロック生成のアルゴリズムは別々ですが、どちらも同じデータ構造で動作します。 ここでは、合意形成アルゴリズムを理解するのに役立つブロック生成と、それがシステムの他の部分とどのように統合されるかについて説明します。
どちらのタイプのノードも、常に入力者の検証と詐欺の検出を行います。 不正または無効なメッセージは検出され、破棄され、伝播されません。 疑わしい動きをするピアノードは切断され、その公開鍵はアクセス禁止されます。
Skycoin合意形成アルゴリズムはどのように動くか 以下の説明は、 （i）各ノードがブロック生成者かつ合意形成の参加者であり、 （ii）非信頼ノードによって生成された合意形成関連メッセージが受け入れられている、すなわち信用の輪に基づくフィルタリングがない という状況を仮定します。 Skycomin GitHubリポジトリでは、完全な実装（仮定を単純化していない）を利用できます。 シミュレーション結果と詳細、1つの合意形成トライアルの図の例については、[1]を参照してください。 Skycoinアルゴリズムとは異なりますが、信頼関係を持つネットワークのシミュレーションは、[2]で見つけることができます。 Skycoin合意形成アルゴリズムは以下の通りです。
1.　ブロックの生成 各ブロック生成ノードは、新しいトランザクションを収集し、それらを所望のシーケンス番号のUTXOと照合し、対応するトランザクションを新しいブロックにパッケージ化し、ブロックをネットワークに流します。
2.　ブロックの収集 各合意形成ノードは、ブロック生成者によって生成されたブロックを収集し、それらをブロックのシーケンス番号で紐付けられたされたコンテナ（ブロックチェーンとは別）に配置します。
3.　勝利ブロックの選択 各合意形成ノードは、十分に大きな数1の候補ブロックを受信するか、または他の基準を満たした時点で、最も多数のブロック生成者によって作られたブロックを見つけます。 結びつきは決定論的に計算されます。 このようなブロックは 「ローカル勝者」 2とラベル付けされ、ローカルブロックチェーンに追加されます。 ローカル勝者のブロックシーケンス番号に対応するキー - 値ペアは削除され、ストレージが再利用されます。 また、ローカル勝者のハッシュコードは流され、発表されます。</description>
    </item>
    
    <item>
      <title>CXの概要</title>
      <link>https://www.skycoin.net/ja/overview/cx-overview/</link>
      <pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.skycoin.net/ja/overview/cx-overview/</guid>
      <description>序文 プロジェクトのリポジトリ 構文 アフォーダンス  引数の個数の制約 型の制約 存在の制約 識別子の制約 境界の制約 ユーザー定義の制約  強い型付けシステム コンパイルと逐次実行  Read-Eval-Print Loop メタプログラミングコマンド ステッピング 対話的なデバッグ  統合された進化的アルゴリズム シリアライゼーション  序文 CXとは、アフォーダンスの概念に基づいた新しいプログラミングパラダイムを採用して設計された、仕様とプログラミング言語の両方を指します。 アフォーダンスは、何ができて、何ができないのかをプログラムが知ることを可能にします。 たとえば、関数にどのような引数を送ることができるかをプログラムに照会することができ、プログラムは可能なアクションのリストを返します。 リストからどのようなアクションが適切であるかを決定した後、選択肢の1つを選び、そのアクションをプログラムが実行します。 CXのアフォーダンスシステムの重要な要素は、遺伝的プログラミングアルゴリズムが構築されると、実行時にプログラムの構造を最適化するために使用できるネイティブ関数として提供される事です。
CXの仕様では、プログラマはコンパイラとインタプリタの両方にアクセス可能でなければならないとされています。 インタプリタは、プログラマが対話的に要素をプログラムに追加したり削除したりできるREPL(Read-eval-print loop)を通じてアクセスできます。 プログラムが完成すると、そのパフォーマンスを向上させるためにコンパイルすることができます。
CXの型システムは非常に厳格です。 唯一の &amp;ldquo;暗黙の型変換&amp;rdquo;は、パーサーが整数、浮動小数点数、ブール値、文字列、または配列を判別するときに発生します。 たとえば、関数が64ビット整数を必要とする場合、明示的に必要な型に変換するためには、キャスト関数を使用する必要があります。
最後に、CXプログラムをバイト配列に完全にシリアライズして、実行状態と構造を維持することができます。 このシリアライズされたバージョンのプログラムは、後でデシリアライズして、CXインタープリタ/コンパイラを持つ任意のデバイスでその実行を再開することができます。
以下のセクションでは、上で説明したCXの機能について詳しく説明します。
プロジェクトのリポジトリ プロジェクトのソースコードは、Githubリポジトリhttps://github.com/skycoin/cx からダウンロードできます。 リポジトリには、仕様ファイル、ドキュメント、サンプル、およびソースコードが含まれています。
構文 はじめに述べたように、CXは仕様とプログラミング言語の両方を指します。 CX仕様は構文を規定するのではなく、むしろCXとみなすためにCX言語が実装しなければならない構造とプロセスを規定しています。 結果として、2つのCX言語を実装することができ、1つはLispのような構文で、もう1つはCのような構文です。 この基礎となる言語は、CX Base、すなわち「基本言語」と呼ばれています。 このドキュメントでは、実装は仕様の機能を示すために使用されていますが、その目的は学術ツールとしての機能だけでなく、一般的な目的に使用できる完全で堅牢な言語となることです。
このドキュメントで使用されているCXは、Goの構文にできるだけ似た構文を持つことを目標としています。
アフォーダンス プログラマは、関数が受け取るパラメータの数、戻すパラメータの数、目的の機能を得るために必要な記述、文関数にパラメータとして送る必要がある引数など、プログラムを構築する際に非常に多くの決定をする必要があります。 CXのアフォーダンスシステムでは、要素に適用できる可能なアクションのリストを取得するための照会を受けることができます。 この文脈では、要素の例は、関数、構造体、モジュール、および式です。
プログラムの背後にある、ロジックと目的が何であるべきかを指示する一連のルールとファクトを持たずに、少なくともプログラムが意味論的に正しいことを保証する基本的な制約をいくつか決めることができます。 アフォーダンスシステムは、第1のフィルタリング層として、以下で説明する制約を提供します。
引数の個数の制約 CXの式は複数の値を返すことができます。 これは、式の出力引数を受け取る変数の数が、式の演算子で定義された出力の数と一致する必要があるため、アフォーダンスシステムの仕事となります。
out1, out2, ..., outN := op(inp1, inp2, .</description>
    </item>
    
    <item>
      <title>Skycoinの概要</title>
      <link>https://www.skycoin.net/ja/overview/skycoin-overview/</link>
      <pubDate>Sat, 26 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.skycoin.net/ja/overview/skycoin-overview/</guid>
      <description>Skycoinの紹介 Bitcoinと現在のブロックチェーンプロトコルによる革新と欠陥 Bitcoinが起こした革新 Bitcoinの主な欠陥 金融台帳の分散合意システムに求められる特性 Skycoinのセキュリティ哲学 透明性とセキュリティ:Obeliskと公開ブロードキャストチャンネル Obelisk シンプル２択合意アルゴリズム: ２つのブロックからの選択 ブランチ選択肢が複数ある場合の合意形成  Skycoinの紹介 Skycoinは、公開ブロードキャストチャンネルと呼ばれる新しい暗号要素を使った技術に基づいています。 Obeliskと呼ばれる新しい合意形成アルゴリズムの実装も導入されています。 Bitcoinの基礎となっているプルーフ・オブ・ワークとマイニングプロセスに起因するコミットメント問題を緩和し、これに関連するセキュリティ上の問題に対応します。 Obeliskは単一のアルゴリズムではなく、いつかのセキュリティ上の保証を実現するために複数の手法を採用した実装です。
Bitcoinと現在のブロックチェーンプロトコルによる革新と欠陥 Bitcoinでは、新しいトランザクションがブロックに配置され、ブロックチェーンに追加されます。 Bitcoinネットワーク内のすべてのノードは、新しいブロックを作成できます。 したがって、各ブロックが持つ親は1つですが、有効な後継子（子）は1つ以上になり得ます。 チェーンがツリーを形成しますが、Bitcoinは、正当なチェーンがどれであるかを、ネットワーク内の全てのノードがどのように合意するのかという重要な問題を解決します。
Bitcoinは、プルーフ・オブ・ワーク（PoW）という手法を使用して、一意のブロックチェーンを決定します。 有効なブロックは、そのハッシュ値が目標値以下である必要があります。 ノードは新しいブロックにトランザクションを追加し、ブロックのハッシュ値が目標値以下になるまで、ナンスをランダムに変えて試します。
関数を使用して、ブロックツリー内の合計連鎖次数が計算されます。 最も難易度が高く、それを生成するために必要なハッシュ計算が最も多いチェーンは、「最長チェーン」であり、合意チェーンとなります。 「ブロックの深さ」と「難しさ」の概念から、ブロックツリーのすべてのチェーンについて合計連鎖次数が計算され、生成するために最も計算リソースを消費するチェーンのみが合意チェーンとして受け入れられます。
Bitcoinノードはランダムに相互に接続し、各ノードは、それぞれが知っている最も難しいチェーンを接続相手に中継します。 もしあるノードが他の接続されたノードより難しいチェーンを持っている場合、他のノードはそのチェーンを順番に受信します。 ノードは関数を使用し、受け取ったチェーンがより難しいものであることを確かめ、そのチェーンが最長チェーンであることに合意するかどうかを決めるでしょう。 ノードは、新しいチェーンを他のノードに配信します。 このようにして、合意がネットワーク全体に広がり、すべてのノードが同じ合意に達します。
Bitcoinは、ノードがアイデンティティを持っていると仮定せず、ノードが正当であるとも仮定しません。 ノードは他のノードに自由にデータを送信できますが、難易度は各ノードが独立して検証できるため、合意形成に影響を与えることはできません。
Bitcoinが起こした革新 * ブロックチェーン 誰もが持つことができる単一のデータ構造です。
* 取引のための公開台帳 ブロックチェーンに金融取引を格納します。
* PoWの利用と、一定のブロック生成速度を維持するための難易度調整 * アドレスとしての公開鍵ハッシュの利用 公開鍵は使用するまで公開されません。
* 残高整合性を保つための「アウトプット」の利用 分割可能なデジタル通貨を作ろうとする必要はありません。 $25のアウトプットから$20を払うためには、$20を相手に送り$5を自分自身に送ります。
* PoW難易度関数とブロック深度 ブロックツリーの合計連鎖次数を定義する関数を使用します。 公開台帳は、従来のデジタル通貨につきまとっていた二重支出問題を回避します。
Bitcoinの主な欠陥 以下に挙げるものは、新しい暗号通貨の開発で取り組まなければならない課題です。 Bitcoinは、今後の開発によって改善する必要がある、原始的な暗号通貨と見なされるべきです。 Skycoinの基盤となるテクノロジーは、分散合意システム全体を再設計することで、Bitcoinの大きな欠点に対処します。
* Bitcoinの合意は最終決定ではなく、元に戻すことができます 十分なハッシュ計算力をレンタルまたは購入できる人や組織は、トランザクションを元に戻すことができます。
* Bitcoinはネットワーク上で合意を形成しますが、個々のBitcoinノードは、パケットが通過するルータを制御する攻撃に対して非常に脆弱です ルータを制御する攻撃者は、ノードの視野を制御し、ノードの合意決定に任意に影響を与えることができます。
* Bitcoinの取引所は、攻撃に対して非常に脆弱になっています 巧みな攻撃者は、Bitcoin取引所で51％攻撃とアルトコインの売買を行い、取引所を破産に追い込むことができます。</description>
    </item>
    
  </channel>
</rss>