<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Research Update on Skycoin Blog</title>
    <link>https://www.skycoin.net/tags/research-update/</link>
    <description>Recent content in Research Update on Skycoin Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Dec 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.skycoin.net/tags/research-update/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Development Update #88</title>
      <link>https://www.skycoin.net/development-updates/development-update-88/</link>
      <pubDate>Fri, 11 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.skycoin.net/development-updates/development-update-88/</guid>
      <description>The crypto library is not deterministic. It is failing for every one in twelve thousand keys. - A private key should be a 32 byte integer, that is not zero and which is less than the order of the curve. - The base point is raised to the power of the private key, to generate a public key
If you use the same private key, you should get the same public key.</description>
    </item>
    
    <item>
      <title>Development Update #77</title>
      <link>https://www.skycoin.net/development-updates/development-update-77/</link>
      <pubDate>Tue, 11 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.skycoin.net/development-updates/development-update-77/</guid>
      <description>Research Update: Six months ago I began research into economic systems for the meshnet. - routing (how to choose routes over the topology) - payment (how much payment for transit should each node reach, how should price be set)
The naive system is to:  choose the shortest route choose the lowest cost route  If there are two paths, that transit from point A to point B and the lowest cost route is always chosen, then one node ends up with all the traffic.</description>
    </item>
    
    <item>
      <title>Development Update #60</title>
      <link>https://www.skycoin.net/development-updates/development-update-60/</link>
      <pubDate>Fri, 27 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.skycoin.net/development-updates/development-update-60/</guid>
      <description>Research Update: Homomorphic Secret Sharing I think we now have homomorphic secret sharing for for secp256k1. This means that Skycoin can do multisig transactions without having an explicit multisig transaction. Multisig transactions happen outside of the blockchain are not a different transaction type than non-multisig transactions. There is no way to tell them apart on the blockchain.
Background  there is a basepoint b on the curve there is a group operation that takes two points on the curve and generates a new point on the curve you apply the base point to itself N times as the operation (exponention of the base point in the curve) You choose a random 256 bit integer, N.</description>
    </item>
    
    <item>
      <title>Development Update #59</title>
      <link>https://www.skycoin.net/development-updates/development-update-59/</link>
      <pubDate>Mon, 23 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.skycoin.net/development-updates/development-update-59/</guid>
      <description>Research Note I do not want to announce anything prematurely, but it may be possible to use VerSum to lock out 51% attacks completely at overkill level. http://people.csail.mit.edu/nickolai/papers/vandenhooff-versum.pdf
Previously we had designed a check pointing system and it appeared to not introduce any edge cases that were exploitable. Instead of doing distributed checkpoints on the program state every few hours or ten thousand blocks, this pushes the check points down to incremental block by block level.</description>
    </item>
    
    <item>
      <title>Development Update #35</title>
      <link>https://www.skycoin.net/development-updates/development-update-35/</link>
      <pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.skycoin.net/development-updates/development-update-35/</guid>
      <description>Research Update Incredible breakthrough on consensus. We have been discussing methods for distributed consensus, creating terminology for understanding the consensus process. We think we have a good formal mathematical model now.
We drew out a finite state machine diagram for client transition states and found a new way of reasoning about state. We discovered that there are security measures that can be layered on to coins, which provably only improve the security of the coin without possibility of introducing a new attack.</description>
    </item>
    
    <item>
      <title>Development Update #26</title>
      <link>https://www.skycoin.net/development-updates/development-update-26/</link>
      <pubDate>Sun, 22 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.skycoin.net/development-updates/development-update-26/</guid>
      <description>Summary: The darknet repo has been removed and moved into Skywire and Whitepaper.
Two thousand lines of coin have been removed from Skywire. It does the same thing, is much cleaner now. The daemon almost works. Will have some development documentation and sample apps soon.
The remaining issues for the meshnet/darknet have been worked out, specifically:  preventing circular routes (denial of service) allowing multi-hop routes to be established quickly without incurring round trip latency for each hop binary wire protocol format  There is architectural issue, about the relationship between gnet, Skywire and the relay service.</description>
    </item>
    
    <item>
      <title>Development Update #25</title>
      <link>https://www.skycoin.net/development-updates/development-update-25/</link>
      <pubDate>Wed, 18 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.skycoin.net/development-updates/development-update-25/</guid>
      <description>Summary: We figured out way of preventing Sybil attack using a hybrid Proof of Stake system.
To create a node, you must prove you have coins. Say 10 coins. You send 10 coins to address A. Then you send the 10 coins from address A to address B. Then you add a signature using the public key in address A to sign a message in your Obelisk blockchain.
Alternatively, you could publish the public key for address A and then just sign a message with that public key.</description>
    </item>
    
  </channel>
</rss>